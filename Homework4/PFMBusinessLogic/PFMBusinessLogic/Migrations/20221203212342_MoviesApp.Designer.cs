// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PFMBusinessLogic.Database;

#nullable disable

namespace PFMBusinessLogic.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221203212342_MoviesApp")]
    partial class MoviesApp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("movies")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoviePerson", b =>
                {
                    b.Property<string>("MoviesTitle")
                        .HasColumnType("text");

                    b.Property<string>("PersonsName")
                        .HasColumnType("text");

                    b.HasKey("MoviesTitle", "PersonsName");

                    b.HasIndex("PersonsName");

                    b.ToTable("MoviePerson", "movies");
                });

            modelBuilder.Entity("MovieTag", b =>
                {
                    b.Property<string>("MoviesTitle")
                        .HasColumnType("text");

                    b.Property<string>("TagsName")
                        .HasColumnType("text");

                    b.HasKey("MoviesTitle", "TagsName");

                    b.HasIndex("TagsName");

                    b.ToTable("MovieTag", "movies");
                });

            modelBuilder.Entity("PFMBusinessLogic.Models.Movie", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Director")
                        .HasColumnType("text");

                    b.Property<string>("Rate")
                        .HasColumnType("text");

                    b.HasKey("Title");

                    b.ToTable("MoviesStorage", "movies");
                });

            modelBuilder.Entity("PFMBusinessLogic.Models.Person", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("ActorsStorage", "movies");
                });

            modelBuilder.Entity("PFMBusinessLogic.Models.Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("TagsStorage", "movies");
                });

            modelBuilder.Entity("MoviePerson", b =>
                {
                    b.HasOne("PFMBusinessLogic.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFMBusinessLogic.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieTag", b =>
                {
                    b.HasOne("PFMBusinessLogic.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFMBusinessLogic.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
