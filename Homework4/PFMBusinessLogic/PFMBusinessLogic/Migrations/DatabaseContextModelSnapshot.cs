// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PFMBusinessLogic.Database;

#nullable disable

namespace PFMBusinessLogic.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PFMBusinessLogic.Models.Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("TagsStorage");
                });

            modelBuilder.Entity("PFMBusinnecLogic.Models.Actor", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("ActorsStorage");
                });

            modelBuilder.Entity("PFMBusinnecLogic.Movie", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("ActorName")
                        .HasColumnType("text");

                    b.Property<string[]>("Actors")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Director")
                        .HasColumnType("text");

                    b.Property<string>("Rate")
                        .HasColumnType("text");

                    b.Property<string>("TagName")
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Title");

                    b.HasIndex("ActorName");

                    b.HasIndex("TagName");

                    b.ToTable("MoviesStorage");
                });

            modelBuilder.Entity("PFMBusinnecLogic.Movie", b =>
                {
                    b.HasOne("PFMBusinnecLogic.Models.Actor", null)
                        .WithMany("Movies")
                        .HasForeignKey("ActorName");

                    b.HasOne("PFMBusinessLogic.Models.Tag", null)
                        .WithMany("Movies")
                        .HasForeignKey("TagName");
                });

            modelBuilder.Entity("PFMBusinessLogic.Models.Tag", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("PFMBusinnecLogic.Models.Actor", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
